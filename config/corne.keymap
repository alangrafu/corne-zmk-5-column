/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define U_MOUSE_MOVE_MAX 3000
#define U_MOUSE_MOVE_EXPONENT 10
#define U_MOUSE_MOVE_TIME 1500
#define U_MOUSE_MOVE_DELAY 0
#define U_MOUSE_SCROLL_MAX 500                    /* <--- New max speed setting (default: 10) */

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <120>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESCAPE>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34>;
        };

        exclm {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 13>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
        };

        dllr {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        percnt {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
        };

        str {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
        };

        leftparen {
            bindings = <&kp LPAR>;
            key-positions = <9 21>;
        };

        rparen {
            bindings = <&kp RPAR>;
            key-positions = <10 22>;
        };

        layout_switch {
            bindings = <&tog 0>;
            key-positions = <36 37 40 41>;
        };

        system_reset {
            bindings = <&sys_reset>;
            key-positions = <3 4 5>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <15 16 17>;
        };

        system_layer_combo {
            bindings = <&mo 3>;
            key-positions = <36 37>;
        };

        mouse_layer_combo {
            bindings = <&mo 4>;
            key-positions = <28 29>;
        };

        screenshot {
            bindings = <&kp LG(LS(NUMBER_1))>;
            key-positions = <25 5>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        //td0: tap_dance_0 {
        //    compatible = "zmk,behavior-tap-dance";
        //    #binding-cells = <0>;
        //    bindings = <&lt 2 LEFT_CONTROL>, <&to 2>;
        //};
    };

    behaviors {
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&to 0>, <&to 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E         &kp R         &kp T        &kp Y        &kp U        &kp I              &kp O    &kp P     &kp BACKSPACE
&kp LCTRL   &kp A  &kp S  &kp D         &kp F         &kp G        &kp H        &kp J        &kp K              &kp L    &kp SEMI  &kp BACKSLASH
&kp LSHIFT  &kp Z  &kp X  &kp C         &kp V         &kp B        &kp N        &kp M        &kp COMMA          &kp DOT  &kp FSLH  &kp RSHIFT
                          &kp LEFT_ALT  &kp LEFT_GUI  &kp SPACE    &lt 1 ENTER  &lt 2 SPACE  &mt RIGHT_ALT ESC
            >;
        };

        //         colemak_layer {
        //             bindings = <
        // &none  &kp Q  &kp W  &kp F             &kp P         &kp G          &kp J        &kp L                      &kp U             &kp Y    &kp SEMICOLON  &none
        // &none  &kp A  &kp R  &kp S             &kp T         &kp D          &kp H        &kp N                      &kp E             &kp I    &kp O          &none
        // &none  &kp Z  &kp X  &kp C             &kp V         &kp B          &kp K        &kp M                      &kp COMMA         &kp DOT  &kp FSLH       &none
        //                      &kp LEFT_CONTROL  &kp LEFT_GUI  &lt 2 SPACE    &lt 1 ENTER  &mt RIGHT_SHIFT BACKSPACE  &mt LEFT_ALT ESC
        //             >;
        //         };

        numsym_layer {
            bindings = <
&trans  &kp N1        &kp N2     &kp N3   &kp N4   &kp N5          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp QUESTION  &trans
&trans  &kp NUMBER_6  &kp N7     &kp N8   &kp N9   &kp NUMBER_0    &kp COLON         &kp PLUS           &kp MINUS       &kp PIPE         &kp ASTERISK  &trans
&trans  &kp GRAVE     &kp TILDE  &kp DQT  &kp SQT  &kp BSLH        &kp LESS_THAN     &kp GREATER_THAN   &kp UNDER       &kp EQUAL        &kp SLASH     &trans
                                 &trans   &trans   &trans          &trans            &trans             &trans
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp GRAVE   &kp F1  &kp F4  &kp F7  &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &kp K_PASTE     &kp UP_ARROW    &kp K_COPY          &kp PG_UP      &trans
&trans  &kp LSHIFT  &kp F2  &kp F5  &kp F8  &kp C_MUTE      &kp C_PLAY_PAUSE      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT           &kp PG_UP      &trans
&trans  &kp LCTRL   &kp F3  &kp F6  &kp F9  &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp C_REWIND    &kp K_REDO      &kp C_FAST_FORWARD  &kp PAGE_DOWN  &trans
                            &trans  &trans  &td1            &trans                &trans          &trans
            >;
        };

        sys_layer {
            bindings = <
&trans  &trans        &trans        &bt BT_PRV    &bt BT_NXT    &trans            &none   &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans  &none   &none   &none   &none   &trans
&trans  &bootloader   &sys_reset    &none         &bt BT_CLR    &bt BT_CLR_ALL    &none   &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &msc SCRL_DOWN  &mmv MOVE_UP    &msc SCRL_UP     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp LCLK  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans          &trans          &trans           &trans     &trans
                        &trans  &trans  &trans    &mkp LCLK  &trans          &trans
            >;
        };
    };
};
